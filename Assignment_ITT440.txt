#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <signal.h>
#include <errno.h>

#define PIN_LENGTH 4
#define PIN_WAIT_INTERVAL 2

void getINP(char inp[PIN_LENGTH + 1])
{
	srand(getpid() + getppid());
	inp[0] = 49 + rand % 7;
	for(int i=1; i<PIN_LENGTH; i++)
	{
		inp[i] = 48 + rand() % 7;
	}
	inp[PIN_LENGTH] = '\0';
}

void sigint_handler(int sig);

int main(void)
{
	signal(SIGINT, sigint_handler);
	while(1)
	{
		int pipefds[2];
		char inp[PIN_LENGTH + 1];
		char buffer[PIN_LENGTH + 1];
		char studentID[10];

		pipe(pipefds);
		pid_t pid = fork();

		if(signal(SIGINT, sigint_handler)==SIG_ERR)
		{
			perror("signal");
			exit(1);
		}

		if(pid==0)
		{
			getINP(inp); //generate PIN
			close(pipefds[0]); //close read fd
			write(pipefds[1], inp, PIN_LENGTH +1); //write PIN to pipe
		
			print("\nPlease input your student id first");
			printf("\n****************************************");
			printf("\nEnter your student ID: ");
			fgets(studentID, 10,stdin);
			printf("Your Pin Number: %s",studentID);
			slepp(PIN_WAIT_INTERVAL);//delaying PIN generation intentionally
			exit(EXIT_SUCCESS);
		}
		
		if(pid>0)
		{
			wait(NULL);

			close(pipefds[1]);
			read(pipefds[0], buffer, PIN_LENGTH + 1);
			close(pipefds[0]);

			printf("%s\n\n", buffer);
		}
}
return EXIT_SUCCESS;
}

void sigint_handler(int sig)
{
	printf("\tOh no! Something went wrong. Goodby >_<\n");
	exit(1);
}